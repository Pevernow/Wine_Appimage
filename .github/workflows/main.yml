# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Packing_wine
        run: |
         sudo apt update
         sudo apt install -y lubuntu-desktop
         sudo apt-get clean
         sudo dpkg --add-architecture i386 
         wget -nc https://dl.winehq.org/wine-builds/winehq.key
         sudo mv winehq.key /usr/share/keyrings/winehq-archive.key
         wget -nc https://dl.winehq.org/wine-builds/ubuntu/dists/bionic/winehq-bionic.sources
         sudo mv winehq-bionic.sources /etc/apt/sources.list.d/
         sudo apt update
         sudo apt-get clean
         sudo apt-get --download-only install winehq-stable:i386
         sudo apt download fontconfig-config
         mkdir appdir
         cd appdir
         sudo find /var/cache/apt/archives/ -name *.deb -exec dpkg -x {} ./ \;
         cd ../
         git clone https://github.com/probonopd/libhookexecv.git
         cd libhookexecv
         sudo apt-get -y install gcc-multilib
         gcc -shared -fPIC -m32 -ldl libhookexecv.c -o libhookexecv.so
         gcc -std=c99 -m32 -static preloaderhook.c -o wine-preloader_hook
         chmod 777 libhookexecv.so
         chmod 777 wine-preloader_hook
         mkdir ../appdir/bin
         sudo cp libhookexecv.so ../appdir/bin/
         sudo cp wine-preloader_hook ../appdir/bin/
         cd ..
         wget -nv -c "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage" -O  appimagetool.AppImage
         sudo chmod +x appimagetool.AppImage
         sudo chmod +x AppRun
         sudo cp AppRun appdir/
         sudo cp resource/* appdir/
         sudo ./appimagetool.AppImage --appimage-extract
         sudo ARCH=x86_64 squashfs-root/AppRun appdir
         ls -a
         sudo chmod 777 ./Wine-x86_64.AppImage
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
         repo_token: "${{ secrets.GITHUB_TOKEN }}"
         automatic_release_tag: "latest"
         prerelease: true
         title: "Auto Build"
         files: |
           Wine-x86_64.AppImage
